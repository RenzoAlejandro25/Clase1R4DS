2+2
sqrt(5)
sqrt(25)
pl
pi
vector<-C(1,2,3,4,5)
vector<-c(1,2,3,4,5)
vector
caracteres<-c(Hola,a,todos,ustedes)
caracteres<-c(hola,a,todos,ustedes)
caracteres<-c(padrito,juanito,panchito)
caracteres<-c("pedrito","juanito","panchito")
caracteres
perso<-c(60,72,57,98,95,72)
alturaz-c(1.75,1.80,1.65,1.90,1.74,1.91)
altura<-c(1.75,1.80,1.65,1.90,1.74,1.91)
imc<-peso/altura^2
imc<-perso/altura^2
imc
sum(perso)
length(perso)
xbar<-sum(perso)/length(perso)
varianza<-sum((perso-xbar)^2)/(length(perso)-1)
varianza
desv.std<-sqrt(varianza)
desv.std
getwd
getwd()
setwd("D:\AUDEP")
setwd("../D:/AUDEP")
help.start()
help("mean")
help.search("mean")
d
log(1+sin(pi/4))
rnorm(8)
x<-5
esto.es.una.variable1<-45
esto.es.una.2a.variable2<-34
una.variable<-4
una.Variable<-10
una.Variable
una.variable
xNum<-c(1, 3.14159, 5, 7)
xNum
xLog<-c(TRUE, FALSE, TRUE, TRUE)
xChar<-c("foo", "bar", "boo", "far")
xChar
xlog
xLog
xMix<-c(1, TRUE, 3, "Hello, wold!")
xMix
peso<-c(60, 72, 84, 65, 43, 87, 90, 56)
peso
length(peso)
peso[4]
altura<-c(1.59, 1.75, 1.85, 1.60, 1.57, 1.90, 1.83, 1.73)
length altura
lenght(altura)
length(altura)
imc<-peso/altura^2
imc
sum(peso)
sum(altura)
sum(peso)/length(peso)
peso.barra <- sum(peso)/length(peso)
sum((peso-peso.barra)^2)/length(peso)
peso(mean)
mean(peso)
var(peso)
x <- NA
x+1
y <- c(x, 3, 5, x)
mean(y)
mean(y, na.rm=TRUE)
sqrt(25)
sqrt(-7)
sqrt(-17)
sqrt(-17+0i)
x <- 5/0
exp(-x)
exp(x)-exp(x)
-1:1/0
1/Inf
# matriz x
x <- c(1:6)
dim(x) <- c(2,3)
dimnames(x) <- list(c("Fila1","Fila2"), c("Col1", "Col2", "Col3"))
View(x)
x
#matriz ejema
ejema <- matrix(1:12, ncol=3, byrow=T, dimnames=list(letters[1:4], LETTERS[1:3]))
ejema
#matriz chemicals
chemicals <- matrix(1:24, ncol=4, dimnames=list(letters[1:4], letters[1:6]))
chemicals <- matrix(1:24, ncol=4, dimnames=list(letters[1:4], LETTERS(1:6)))
chemicals <- matrix(1:24, ncol=4, dimnames=list(letters[1:4], LETTERS[1:6]))
#matriz ejema2
ejema2 <- matrix(1:12, ncol=3, dimnames=list(letters[1:4], LETTERS[1:3]))
ejema2
#matriz chemicals
chemicals <- matrix(1:24, ncol=4, dinames=list(letters[1:6], LETTERS[1:4]))
chemicals <- matrix(1:24, ncol=4, diMnames=list(letters[1:6], LETTERS[1:4]))
chemicals <- matrix(1:24, ncol=4, dimnames=list(letters[1:6], LETTERS[1:4]))
chemicals
#matriz Moco
Moco <- matrix(1:24, ncol=12, dimnames=list(letters[1:2], letters[1:12]))
Moco
ejema[1,1]
ejema
ejema[, c(2, 3)]
ejema[1, 1]
ejema[, c(-1,-3), drop=F]
ejema[, c(-1,-3)]
sel <- matrix(rep(c(T,F), 6), 4, 3)
sel
ejema[sel]
help("rep")
t(chemicals)
chemicals
diag(chemicals)
col(chemicals)
row(chemiclas)
row(chemicals)
x <- matrix(1:6, 2, 3)
x
x[, 2]
x[, 2, drop=F]
x[2,]
x[2, drop=F]
x[1, 1:2]
x
y <- matrix(1:6, 3, 2)
y
y[3, ]
ncol(x)
x
nrow(y)
y
t(x)
cbind(1, x)
x
cbind(2, x)
cbind(x, 2)
cbind(1:3, 1:6)
diag(x)
apply(x, 1, sum)
x
apply(x ,1 , sum)
q = runif(10, 0, 20)
q
VectorBooleano <- (q<=14)
VectorBooleano <- (q>=14)
NumAprobados1 <- sum(VectorBooleano)
NumAprobados2 <- length(VectorBooleano[VectorBooleano=TRUE])
which(VectorBooleano)
Which(VectorBooleano)if (NumAprobados1>0){q[which(VectorBooleano)]}
if (NumAprobados1>0){q[which(VectorBooleano)]}
help("which")
VectorBooleano
NumAprobados1
NumAprobados2
help("runif")
help("logical")
q <- runif(1000000, 0, 20)
q
VectorBooleano <- (q>=14)
VectorBooleano
NumAprobados1 <- sum(VectorBooleano)
NumAprobados1
NumAprobados2 <- length(VectorBooleano[VectorBooleano=TRUE])
NumAprobados2
system.time(sum(VectorBooleano))
system.time(length(VectorBooleano[VectorBooleano=TRUE]))
help("system.time")
x <- c("que", "es", "VERDAD")
x
if("VERDAD" %in% x){print("Verdad se encontre en el IF")} else if ("VERDAD" %in% x) {print("VERDAD se encontro en el IF_ELSE")} else {print("No se encontró la VERDAD")}
x
x <- 1:10
type <- 'mean'
switch(type, mean=mean(x), median=median(x), sd=sd(x))
help("sd")
x <- c("a", "b", "c", "d")
seq_along(x)
for(i in seq_along(x)){print(x[i])}
utils::sessionInfo() #esta función me da información de la versión de R, mi tipo de computadora
installed.packages()
view(installed.packages()) #
view(installed.packages())
View(installed.packages())
View(installed.packages())
getwd()
setwd("C:/Users/Usuario/Desktop/Holi/")
getwd()
dir()
dir()
x <- 12.5 # <- operador de asignación
y <- 2.99999
z <- y^x+pi
z
w = cos(z)^2+sin(z)^2
w
t <- log(pi^(sqrt(z))) # sqrt es para calcular la raíz cuadrada
t
help(log)
xNum <- c(2, 3.6669, -4.5, 12.9999) #Para crear vectore
xNum
Xlog <- c(TRUE, FALSE, TRUE, TRUE, FALSE)
Xlog
xchar <- c("cadena1", "Nombres", "Apellidos", "Edad", "DNI")
xchar
xMix <- c(1, TRUE, 3.9^256, "NOTA", pi)
xMix
vec1 <- 1:5
vec1
vec2 <- 14:20
vec2
vec3 <- 65:130
vec3
vec4 <- c(vec1, vec2, vec3)
vec4
help("rnorm")
rnorm(5)
rnorm(5)
rnorm(n = 10,mean = 12,sd = 3.9)
help("runif")
runif(n = 8,min = 14,max = 20)
help("rchisq")
rchisq(n = 12,df = 8)
help("seq")
help("rep")
vec5 <- rnorm(n = 10,mean = 12,sd = 3.9)
vec6 <- runif(n = 8,min = 14,max = 20) #Estos comandos me ayudan a definir vectores
vec7 <- rchisq(n = 12,df = 8) #Ahora tengo mi vector de 12 elementos
